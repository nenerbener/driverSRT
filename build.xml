<?xml version="1.0"?>

<project name="${name}" default="compile" xmlns:ivy="antlib:org.apache.ivy.ant">

  <!-- Load all the default properties, and any the user wants    -->
  <!-- to contribute (without having to type -D or edit this file -->
  <property file="./default.properties" />

  <!-- the normal classpath -->
  <path id="classpath">
    <pathelement location="${build.classes}"/>
    <fileset dir="${build.lib}">
      <include name="*.jar" />
    </fileset>
    <pathelement location="${build.conf}"/>
    <pathelement location="${build.resources}"/>
  </path>

  <!-- the buildpath -->
  <path id="buildpath">
    <fileset dir="${build.lib}">
      <include name="*.jar" />
    </fileset>
    <pathelement location="${build.conf}"/>
    <pathelement location="${build.resources}"/>
  </path>

  <presetdef name="javac">
    <javac includeantruntime="false" />
  </presetdef>

  <!-- target: clean-build -->
  <target name="clean" description="--> clean the project built files">
    <delete dir="${build.dir}"/>
  </target>

	<target name="resolve" description="dependencies required by driverSRT">
		<ivy:resolve file="${ivy.file}" conf="default"/>
		<ivy:retrieve/> 
<!--		<ivy:retrieve pattern="Libraries/[artifact]-[revision]-[type].[ext]" />  -->
	</target>

	<target name="init" depends="clean,resolve" description="--> create build directory, download dependencies and copy">
		<mkdir dir="${build.dir}"/>
		<copy file="${base.dir}/default.properties" 
			todir="${build.dir}"
			verbose="true"/>
		<copy file="${base.dir}/build.xml" 
			todir="${build.dir}"
			verbose="true"/>
		<copy file="${base.dir}/ivy.xml" 
			todir="${build.dir}"
			verbose="true"/>
		<mkdir dir="${build.lib}"/>
		<copy todir="${build.lib}" verbose="true">
			<fileset dir="${lib.dir}" includes="*.*"/>
		</copy>
		<mkdir dir="${build.resources}"/>
		<copy todir="${build.resources}" verbose="true">
			<fileset dir="${resources.dir}" includes="*.*"/>
		</copy>
		<mkdir dir="${build.classes}"/>
		<mkdir dir="${build.dir}/META-INF"/>
	</target>

  <!-- ====================================================== -->
	<!-- Compile the Java files to build/classes folder         -->
  <!-- ====================================================== -->
  <target name="compile" description="--> compile Java files">
    <javac
     encoding="${build.encoding}"
     srcdir="${src.dir}"
		 includes="com/nenerbener/**/*.java"
     destdir="${build.classes}"
     debug="${javac.debug}"
     optimize="${javac.optimize}"
     target="${javac.version}"
     source="${javac.version}"
     deprecation="${javac.deprecation}">
		 <compilerarg value="-Xlint:-path"/>
		 <classpath refid="buildpath"/>
    </javac>
  </target>

  <!-- ================================================================== -->
  <!-- Make jar file                                                      -->
  <!-- ================================================================== -->
  <target name="jar" depends="compile" description="--> make driverSRT.jar">
	  <jar jarfile="${final.name}.jar"
			basedir="${build.dir}">
    </jar>
  </target>

  <!-- ================================================================== -->
	<!-- run a default testcase run.dir=[] run.url=[] defined								-->
	<!-- default.properties																						  	  -->
  <!-- ================================================================== -->
	<target name="run" depends="compile" description="--> run driverSRT.DriverSRT.class">
		<java classname="com.nenerbener.driverSRT.DriverSRT" fork="yes" failonerror="false" maxmemory="2048m">
			<jvmarg value="-Xdebug"/>
			<jvmarg value="-Xnoagent"/>
			<jvmarg value="-Xrunjdwp:transport=dt_socket,address=5555,server=y,suspend=y"/>
<!--			<arg value="${src.dir}"/> -->
			<arg value="${run.dir}"/>
			<arg value="${run.url}"/> 
			<classpath refid="classpath"/>
		</java>
	</target>

</project>
